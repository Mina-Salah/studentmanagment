@model StudentManagement.Web.ViewModels.StudentFormViewModel
@{
    ViewData["Title"] = "Edit Student Information";
}

<div class="container mt-4">
    <div class="card border-0 shadow">
        <div class="card-header bg-warning text-white">
            <h3 class="mb-0"><i class="fas fa-user-edit me-2"></i>@ViewData["Title"] - @Model.Name</h3>
        </div>
        <div class="card-body">
            <form asp-action="Edit" method="post">
                <input type="hidden" asp-for="Id" />

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group mb-4">
                            <label asp-for="Name" class="form-label fw-bold">Student Name</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-user"></i></span>
                                <input asp-for="Name" class="form-control" placeholder="Enter student's name" />
                            </div>
                            <span asp-validation-for="Name" class="text-danger mt-1 d-block"></span>
                        </div>

                        <div class="form-group mb-4">
                            <label asp-for="DateOfBirth" class="form-label fw-bold">Date of Birth</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-calendar-alt"></i></span>
                                <input asp-for="DateOfBirth" class="form-control" type="date" />
                            </div>
                            <span asp-validation-for="DateOfBirth" class="text-danger mt-1 d-block"></span>
                        </div>

                        <div class="form-group mb-4">
                            <label asp-for="Address" class="form-label fw-bold">Address</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-map-marker-alt"></i></span>
                                <input asp-for="Address" class="form-control" placeholder="Enter student's address" />
                            </div>
                            <span asp-validation-for="Address" class="text-danger mt-1 d-block"></span>
                        </div>
                        <div class="form-group mb-4">
                            <label asp-for="Email" class="form-label fw-bold">Email</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-envelope"></i></span>
                                <input asp-for="Email" class="form-control" placeholder="Enter student's email" />
                            </div>
                            <span asp-validation-for="Email" class="text-danger mt-1 d-block"></span>
                        </div>

                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="form-label fw-bold mb-3">
                                <i class="fas fa-book me-1"></i> Subjects
                            </label>
                            <div class="subjects-container p-3 border rounded bg-light">
                                @if (!Model.Subjects.Any())
                                {
                                    <div class="alert alert-info text-center">
                                        <i class="fas fa-info-circle me-1"></i> No available subjects
                                    </div>
                                }
                                else
                                {
                                    <div class="row">
                                        @for (int i = 0; i < Model.Subjects.Count; i++)
                                        {
                                            var subject = Model.Subjects[i];
                                            var isSelected = subject.IsSelected ? "subject-selected" : "";
                                            <div class="col-md-6 mb-2">
                                                <div class="subject-item p-2 rounded @isSelected" onclick="toggleCheckbox(this)">
                                                    <div class="form-check">
                                                        <input asp-for="Subjects[@i].IsSelected" class="form-check-input" type="checkbox" id="subject_@subject.Id" />
                                                        <input asp-for="Subjects[@i].Id" type="hidden" />
                                                        <input asp-for="Subjects[@i].Name" type="hidden" />
                                                        <label class="form-check-label" for="subject_@subject.Id">
                                                            @subject.Name
                                                        </label>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>

                <div class="d-flex mt-4">
                    <button type="submit" class="btn btn-warning text-white">
                        <i class="fas fa-save me-1"></i> Save Changes
                    </button>
                    <a href="@Url.Action("Index")" class="btn btn-outline-secondary ms-2">
                        <i class="fas fa-arrow-left me-1"></i> Back to List
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/js/all.min.js"></script>
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>
        function toggleCheckbox(element) {
            const checkbox = element.querySelector('input[type="checkbox"]');
            if (checkbox) {
                checkbox.checked = !checkbox.checked;
                const event = new Event('change');
                checkbox.dispatchEvent(event);
                element.classList.toggle('subject-selected', checkbox.checked);
            }
        }

        $(document).ready(function () {
            $('.subject-item').each(function () {
                const checkbox = $(this).find('input[type="checkbox"]')[0];
                if (checkbox.checked) {
                    $(this).addClass('subject-selected');
                }
            });

            $('input').focus(function () {
                $(this).parent().addClass('border-warning');
            }).blur(function () {
                $(this).parent().removeClass('border-warning');
            });

            $('form').submit(function () {
                if ($(this).valid()) {
                    $('button[type="submit"]').html('<span class="spinner-border spinner-border-sm me-2"></span> Saving...');
                    $('button[type="submit"]').attr('disabled', true);
                }
            });
        });
    </script>
    <style>
        body {
            background-color: #f8f9fa;
            font-family: 'Tajawal', sans-serif;
        }

        .card {
            border-radius: 10px;
            overflow: hidden;
        }

        .card-header {
            border-bottom: none;
            padding: 15px 20px;
            background-color: #f0ad4e !important;
        }

        .btn {
            border-radius: 5px;
            padding: 8px 20px;
            transition: all 0.3s;
        }

        .btn-warning {
            background-color: #f0ad4e;
            border-color: #f0ad4e;
        }

            .btn-warning:hover {
                background-color: #ec971f;
                border-color: #ec971f;
            }

        .input-group {
            border-radius: 5px;
            overflow: hidden;
            transition: all 0.3s;
        }

            .input-group:focus-within {
                box-shadow: 0 0 0 0.2rem rgba(240, 173, 78, 0.25);
            }

        .input-group-text {
            background-color: #f1f4f9;
            border-right: none;
        }

        .form-control {
            border-left: none;
        }

            .form-control:focus {
                border-color: #ced4da;
                box-shadow: none;
            }

        .subjects-container {
            max-height: 300px;
            overflow-y: auto;
        }

        .subject-item {
            cursor: pointer;
            transition: all 0.2s;
            border: 1px solid transparent;
        }

            .subject-item:hover {
                background-color: #fdf0dc;
                border-color: #f7c678;
            }

            .subject-item.subject-selected {
                background-color: #fce9d3;
                border-color: #f0ad4e;
            }

        .form-check-input:checked + label {
            font-weight: bold;
            color: #ec971f;
        }
    </style>
}