@model List<IGrouping<StudentManagement.Core.Entities.Course_file.Course, StudentManagement.Core.Entities.Course_file.CourseVideo>>
@using StudentManagement.Core.Entities
@inject StudentManagement.Services.Interfaces.IEnrollmentService enrollmentService
@inject StudentManagement.Services.Interfaces.IStudentService studentService

@{
    ViewData["Title"] = "الدورات التعليمية";
    Layout = "~/Views/Shared/_StudentLayout.cshtml";

    var email = User.Identity?.Name;
    var student = await studentService.GetStudentByEmailAsync(email);
}

<!-- Hero Section -->
<div class="courses-hero bg-gradient-primary py-5 text-center text-white">
    <div class="container">
        <h1 class="display-5 fw-bold mb-3">الدورات التعليمية</h1>
        <p class="lead opacity-75">اختر من بين مجموعة واسعة من الدورات لتعزيز مهاراتك</p>
    </div>
</div>

<div class="container py-5">
    @if (!Model.Any())
    {
        <div class="empty-state text-center py-5">
            <div class="empty-state-icon mb-4">
                <i class="fas fa-book fa-4x text-muted"></i>
            </div>
            <h3 class="text-muted mb-3">لا توجد دورات متاحة حالياً</h3>
            <p class="text-muted mb-4">سيتم إضافة دورات جديدة قريباً، تابعنا للحصول على التحديثات</p>
            <a href="#" class="btn btn-primary px-4">
                <i class="fas fa-bell me-2"></i> اشترك للتنبيهات
            </a>
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            @foreach (var group in Model)
            {
                var course = group.Key;
                var isEnrolled = student != null && await enrollmentService.IsStudentEnrolledAsync(student.Id, course.Id);
                var teacherNames = string.Join("، ", course.CourseTeachers
                .Where(ct => ct.Teacher != null)
                .Select(ct => ct.Teacher.Name));
                var enrollmentCount = await enrollmentService.GetEnrollmentCountAsync(course.Id);
                var random = new Random();
                var rating = random.Next(35, 50) / 10.0;

                <div class="col">
                    <div class="card course-card h-100 border-0 shadow-sm hover-shadow transition-all">
                        <div class="course-badge position-absolute bg-primary text-white px-3 py-1 rounded-end">
                            @group.Count() فيديو
                        </div>
                        <img src="~/images/course-@(random.Next(1, 6)).jpg" class="card-img-top course-image" alt="@course.Title">

                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-start mb-2">
                                <h5 class="card-title mb-0">@course.Title</h5>
                                <div class="rating-badge bg-warning text-dark px-2 py-1 rounded small">
                                    <i class="fas fa-star"></i> @rating
                                </div>
                            </div>

                            <p class="text-muted small mb-3">
                                <i class="fas fa-user-tie me-1"></i> @teacherNames
                            </p>

                            <p class="card-text text-muted small mb-3">
                                @(course.Description?.Length > 100 ? course.Description.Substring(0, 100) + "..." : course.Description)
                            </p>

                            <div class="d-flex justify-content-between align-items-center">
                                <span class="text-muted small">
                                    <i class="fas fa-users me-1"></i> @enrollmentCount طالب
                                </span>
                                <span class="text-muted small">
                                    <i class="fas fa-clock me-1"></i> @(group.Sum(v => v.DurationInMinutes) / 60) ساعات تقريباً
                                </span>
                            </div>
                        </div>

                        <div class="card-footer bg-white border-0 pt-0">
                            @if (!isEnrolled)
                            {
                                <form asp-action="Enroll" method="post" class="w-100">
                                    <input type="hidden" name="courseId" value="@course.Id" />
                                    <button type="submit" class="btn btn-primary w-100">
                                        <i class="fas fa-sign-in-alt me-1"></i> تسجيل في الدورة
                                    </button>
                                </form>
                            }
                            else
                            {
                                <a asp-controller="StudentDashboard" asp-action="Courses" class="btn btn-success w-100">
                                    <i class="fas fa-play me-1"></i> الاستمرار في التعلم
                                </a>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@section Styles {
    <style>
        /* RTL Support */
        body {
            text-align: right;
            direction: rtl;
        }

        /* Header Styles */
        .courses-hero {
            background: linear-gradient(135deg, #4e54c8 0%, #8f94fb 100%);
            margin-bottom: 30px;
            border-radius: 0 0 20px 20px;
        }

        /* Course Card Styles */
        .course-card {
            transition: all 0.3s ease;
            border-radius: 10px;
            overflow: hidden;
        }

            .course-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 20px rgba(0,0,0,0.1) !important;
            }

        .course-image {
            height: 180px;
            object-fit: cover;
        }

        .course-badge {
            top: 15px;
            left: 0;
            z-index: 1;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        .rating-badge {
            font-size: 0.8rem;
        }

        /* Empty State Styles */
        .empty-state {
            max-width: 500px;
            margin: 0 auto;
        }

        .empty-state-icon {
            opacity: 0.6;
        }

        /* Pagination Styles */
        .pagination .page-item.active .page-link {
            background-color: #4e54c8;
            border-color: #4e54c8;
        }

        .pagination .page-link {
            color: #4e54c8;
        }

        /* Responsive Adjustments */
        @@media (max-width: 768px) {
            .courses-hero {
                padding: 2rem 0;
            }

            .course-image {
                height: 150px;
            }
        }
    </style>
}